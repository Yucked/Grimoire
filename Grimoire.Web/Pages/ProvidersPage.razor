@page "/p"

@using Grimoire.Web.Cache

@inject CacheHandler CacheHandler
@inject NavigationManager NavigationManager

<div class="container p-4">
    @if (_providers == null || !_providers.Any()) {
        <WaitingOn/>
    }
    else {
        <div class="container">
            <ul class="list-group list-group-flush">
                @foreach (var provider in _providers) {
                    <a class="list-group-item list-group-item-action" @onclick="() => NavTo(provider.Name)">
                        <img src="@CacheHandler.GetStaticPath(provider.IconPath)" class="img-thumbnail" alt="@provider.Name" width="70">
                        <span>@provider.Name</span>
                    </a>
                }
            </ul>
        </div>
    }
</div>

@code {
    private IReadOnlyList<CachedProvider> _providers;

    protected override async Task OnInitializedAsync() {
        _providers = await CacheHandler.GetProvidersAsync();
    }

    private void NavTo(string provider) {
        NavigationManager.NavigateTo($"/{provider}");
    }

}