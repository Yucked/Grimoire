@page "/"

@using Grimoire.Web.Handlers
@using Grimoire.Sources.Models

@inject NavigationManager NavigationManager
@inject DbHandler DbHandler

<div class="container-lg py-4">
    <div class="row row-cols-1 g-5">
        <div class="col">
            <div class="card">
                <h4 class="card-header py-3">
                    <div class="d-flex justify-content-between align-items-start">
                        <span>🥳 Recent Updates</span>
                        <button class="btn btn-dark">👀</button>
                    </div>
                </h4>
                <div class="card-body">

                    <div class="row g-3 flex-nowrap">
                        <ul class="list-group shadow">
                            @if (_mangas == null) {
                                <Waiting Message="Loading recent releases"/>
                            }
                            else if (!_mangas.Any()) {
                                <Waiting Message="⚠️ No recent updates found. Library is empty!"/>
                            }
                            else {
                                @foreach (var manga in _mangas
                                    .OrderByDescending(x => x.Chapters.FirstOrDefault().ReleasedOn)
                                    .Take(10)) {
                                    var chapter = manga.Chapters.FirstOrDefault();
                                    <a class="list-group-item d-flex justify-content-between align-items-start list-group-item-action"
                                       @onclick="() => GoToChapter(manga.SourceId, manga.Id, chapter.Name)">

                                        <div class="ms-2 me-auto">
                                            <div class="fw-bold">@manga.Name</div>
                                            @chapter.Name.Replace(manga.Name, string.Empty)
                                        </div>

                                        <span class="badge bg-dark rounded-pill">@chapter.ReleasedOn</span>
                                    </a>
                                }
                            }
                        </ul>
                    </div>

                </div>
            </div>
        </div>

        <div class="col">
            <div class="card">
                <h4 class="card-header py-3">📑 Favorites</h4>
                <div class="card-body">
                    @if (_mangas == null || !_mangas.Any()) {
                        <Waiting Message="Loading user library"/>
                    }
                    else {
                        <div class="row row-cols-2 row-cols-md-4 g-4">
                            @foreach (var manga in _mangas) {
                                <div class="col">
                                    <MangaCard SourceId="@manga.SourceId" Manga="@manga"></MangaCard>
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

</div>

@code {
    private IReadOnlyCollection<Manga> _mangas;

    protected override async Task OnInitializedAsync() {
        _mangas = (await DbHandler.GetLibraryAsync()).ToArray();
    }

    private void GoToChapter(string sourceId, string mangaId, string chapter) {
        NavigationManager.NavigateTo($"/{sourceId}/{mangaId}/{chapter}");
    }

}