@page "/sources/{SourceId}"
@page "/sources/{SourceId}/{PageNumber:int}"

@using Grimoire.Handlers
@using Grimoire.Helpers
@using Grimoire.Models

@inject DatabaseHandler DatabaseHandler
@inject NavigationManager NavigationManager

<div class="container-lg py-4">
    @if (!_book.HasAnyPages) {
        <Waiting Message=@LoadingMessage/>
    }
    else {
        <div class="row row-cols-1 g-5">
            <div class="col">
                <div class="card text-center">
                    <div class="card-header">
                        <div class="d-flex justify-content-between align-items-start">
                            <h3 class="card-title">
                                <img src="@DatabaseHandler.GetSourceIcon(SourceId)"
                                     alt="@SourceId" width="20">
                                <span>@SourceId.GetNameFromId() | <span class="badge bg-dark">Mangas: @_book.ItemCount</span></span>

                            </h3>
                            <button class="btn btn-dark" onclick="@RefreshAsync()">Refresh 👀</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col">
                <div class="row row-cols-2 row-cols-md-4 g-4">
                    @foreach (var manga in _currentPage.Items) {
                        <div class="col">
                            <MangaCard SourceId="@SourceId" Manga="@manga"/>
                        </div>
                    }
                </div>
            </div>

            @if (_book.Pages.Count > 1) {
                <div class="col">
                    <nav aria-label="Page navigation">
                        <ul class="pagination pagination-lg justify-content-center">
                            <li class="page-item @(!_book.IsValidPage(PageNumber - 1) ? "disabled" : "")">
                                <a class="page-link" @onclick="() => Nav(PageNumber - 1)">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>

                            <li class="page-item @(!_book.IsValidPage(PageNumber + 1) ? "disabled" : "")">
                                <a class="page-link" @onclick="() => Nav(PageNumber + 1)">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>

                        </ul>
                    </nav>
                </div>
            }
        </div>
    }
</div>

@code
{
    [Parameter]
    public string SourceId { get; set; }

    [Parameter]
    public int PageNumber { get; set; }

    private string LoadingMessage
        => $"Loading {SourceId.GetNameFromId()} content";

    private Book _book;
    private Page _currentPage;

    protected override async Task OnInitializedAsync() {
        var mangas = await DatabaseHandler.GetMangasAsync(SourceId, false);
        _book = new Book(mangas);
        _currentPage = _book.GoTo(PageNumber);
    }

    private async Task RefreshAsync() {
        var mangas = await DatabaseHandler.GetMangasAsync(SourceId, true);
        _book = new Book(mangas);
        _currentPage = _book.GoTo(PageNumber);
    }

    private void Nav(int num) {
        if (!_book.IsValidPage(num)) {
            return;
        }

        NavigationManager.NavigateTo($"/sources/{SourceId}/{num}", true);
    }
}