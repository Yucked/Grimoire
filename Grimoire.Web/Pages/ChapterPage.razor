@page "/{Prov}/{Mang}/{Chap:int}"
@using Grimoire.Sources.Sources

@inject IServiceProvider ServiceProvider
@inject dynamic AppState

<div class="container">
    @if (!ShouldLoad()) {
        <WaitingOn/>
    }
    else {
        @foreach (var p in AppState.Chapter.Pages) {
            <img src="@p.Value" alt="@p.Key">
        }
    }
</div>

@code {

    [Parameter]
    public string Prov { get; set; }

    [Parameter]
    public string Mang { get; set; }

    [Parameter]
    public int Chap { get; set; }

    protected override async Task OnInitializedAsync() {
        if (!ShouldLoad()) {
            var provider = ServiceProvider.GetRequiredService<TCBScansSource>();
            AppState.Chapter = await provider.GetChapterAsync(AppState.Chapter);
        }
    }

    private bool ShouldLoad() {
        if (AppState.Chapter?.Pages == null) {
            return false;
        }

        return AppState.Chapter.Pages.Count != 0;
    }

}